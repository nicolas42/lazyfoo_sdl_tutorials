{
	// ------------------
	// MARK: Monitor view
	
	MonitorView:
	{
		+: TileView,
		nsClass: LBTileMonitorView,
		axDescriptionKeyPath: "name",
		axRoleDescription: "monitor",
		channelViewKey: "MonitorChannelView",
		patchboardColumn: 4,							// 5th column in the patchboard
		gxLayout: [
			"H:[self(208)]",
			"H:|-13-[name]-8-[onoff]-13-|",
			"H:|-13-[channelsView]-13-|",
			"V:|-11-[name]",
			"V:|-11-[onoff]",
			"V:|-33-[missingDeviceView(25)]",
			"V:[dividerTop]-10-[channelsView]-8-[dividerBottom]-1-[optionsView]-4-|"
		],
		gxChildViews:
		{
			missingDeviceView:
			{
				+: MissingDeviceView
			},
			name:
			{
				+: LabelView.left.darkTextColor.bold.size13,
				gxDisableOnKey: "disabled",
				gxForePainter:
				{
					+: LabelFore,
					disabled: { gxFontColor: "name:darkTextDisabled" }
				},
				gxIntrinsicWidth: -1,
				gxValueKeyPath: "displayName"
			},
			onoff:
			{
				+: OnOffSwitchView,
				axHelp: "Turn this monitor on or off"
			},
			dividerTop:
			{
				nsClass: GXDrawView,
				gxLayout: [ "H:|-3-[self]-3-|", "V:[self(1)]" ],	// inset is tileSelectionWidth
				gxBackPainter:
				{
					nsClass: GXPainter,
					gxEdgeInsets: "1, 0, 1, .5",
					gxFillColor: "name:tileDivider"
				}
			},
			channelsView:
			{
				nsClass: "GXListView",
				gxTitle: "Monitor Channels",
				gxIntrinsicWidth: -1,
				axHelp: "List of monitor channels",
			},
			dividerBottom:
			{
				nsClass: GXDrawView,
				gxLayout: [ "H:|-3-[self]-3-|", "V:[self(1)]" ],	// inset is tileSelectionWidth
				gxBackPainter:
				{
					nsClass: GXPainter,
					gxEdgeInsets: "1, 0, 1, .5",
					gxFillColor: "name:tileDivider"
				}
			},
			optionsView:
			{
				+: TileOptionsView,
				gxValueKeyPath: "collapsed",
				axTitle: "Options",
				gxLayout: [
					"H:|-4-[self]-4-|",				// inset of 4 is 1 (frame) + tileSelectionWidth
					"H:|[contentView]|",
					"V:[self(>=24)]",
					"V:|-3-[headerView]-0-[contentView]"
				],
				gxChildViews:
				{
					headerView:
					{
						+: TileOptionsHeader,
					},
					contentView:
					{
						nsClass: GXDrawView,
						gxLayout: [
							"H:|-15-[volumeIndicator(16)]-8-[volumeSlider]-2-[volumeReadout(32)]-9-|&alignCenterY",
							"V:|-5-[volumeIndicator]",
							"V:[self(30)]"
						],
						gxChildViews:
						{
							volumeIndicator:
							{
								+: VolumeIndicatorView,
								axHelp: "Mutes the monitor device",
								lbDisableUIOnKey: "disabled"
							},
							volumeSlider:
							{
								+: VolumeSliderView,
								axHelp: "Adjusts the monitor device volume",
								lbDisableUIOnKey: "disabled"
							},
							volumeReadout:
							{
								+: LabelView.right.size11,
								gxDisableOnKey: "disabled",
								gxForePainter:
								{
									+: LabelFore,
									gxFontColor: "name:darkText",
									disabled: { gxFontColor: "name:darkTextDisabled" }
								},
								gxValueKeyPath: "volumeForReadout"
							}
						}
					}
				}
			}
		}
	},
	
	
	// --------------------------
	// MARK: Monitor channel view
	
	MonitorChannelView:
	{
		nsClass: LBChannelView,
		axDescriptionKeyPath: raAccessibilityValueDescription,
		axHelp: "VO press to create a wire to an output channel",
		axIsIgnored: false,
		axRoleDescription: "Channel",
		gxAlwaysUpdate: true,
		gxDisableOnKey: "enclosingTile.disabled",
		gxIntrinsicHeight: 20,
		gxLayout: [
			"H:|-0-[anchor]-4-[activeMeter]-9-[name(71)]-2-|",
			"H:[anchor]-4-[levelMeter]-9-[name]",
			"H:[self]-(<=0)-[anchor]&alignCenterY",
			"H:[self]-(<=0)-[activeMeter]&alignCenterY",
			"H:[self]-(<=0)-[levelMeter]&alignCenterY",
			"H:[self]-(<=0)-[name]&alignCenterY",
		],
		gxChildViews:
		{
			anchor:
			{
				+: SocketView,
				gxDisableOnKey: "enclosingTile.disabled",
				gxValueKeyPath: "self",
				targetColumn: 2
			},
			name:
			{
				+: LabelView.left.darkTextColor.size11,
				gxDisableOnKey: "enclosingTile.disabled",
				gxForePainter:
				{
					+: LabelFore,
					disabled: { gxFontColor: "name:darkTextDisabled" }
				},
				gxValueKeyPath: "name"
			},
			activeMeter:
			{
				+: ActiveMeter,
				gxLayout: [ "V:[self(8)]" ],
				gxAnimateOnKey: "enclosingTile.enabledForActiveMeter"
			},
			levelMeter:
			{
				+: LevelMeter,
				gxLayout: [ "V:[self(8)]" ],
				gxAnimateOnKey: "enclosingTile.enabledForLevelMeter"
			}
		}
	},
}
